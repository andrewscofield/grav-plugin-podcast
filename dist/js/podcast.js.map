{"version":3,"sources":["node_modules/browser-pack/_prelude.js","assets/js/player.js","assets/js/podcast.js"],"names":[],"mappings":"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","file":"podcast.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","exports.PodcastPlayer = class{\r\n  \r\n    constructor(player_element, offset = 0){\r\n      this.isPlaying = false;\r\n      this.src;\r\n      this.progress;\r\n      this.currentTime = 0;\r\n      this.timeLeft = 0;\r\n      this.timeOffset = offset;\r\n\r\n      //setting up elements\r\n      this.player = player_element;\r\n      this.audio = this.player.querySelector('.podcast-player-audio');\r\n      this.play_button = this.player.querySelector('.podcast-play-button');\r\n      this.pause_button = this.player.querySelector('.podcast-pause-button');\r\n      this.bar = this.player.querySelector('.podcast-player-progress');\r\n      this.progress = this.player.querySelector('.podcast-player-progress-bar');\r\n      this.time = this.player.querySelector('.podcast-player-progress-time');\r\n  \r\n      //attach this to the dom so its accesible externally\r\n      this.player.podcastplayer = this;\r\n  \r\n      this.init();\r\n    }\r\n  \r\n  \r\n    init() {\r\n  \r\n      //setup native audio event listeners\r\n      this.audio.addEventListener('loadedmetadata', e => this.onCanPlay(e) );\r\n      this.audio.addEventListener('playing', e => this.onPlaying(e) );\r\n      this.audio.addEventListener('pause', e => this.onPause(e) );\r\n      this.audio.addEventListener('ended', e => this.onEnd(e) );\r\n      this.audio.addEventListener('error', e => this.onError(e) );\r\n  \r\n      // apply the audio start time property\r\n      this.audio.currentTime = this.timeOffset; \r\n\r\n      //setup click listeners\r\n      this.play_button.addEventListener('click', e => this.playPause(e));\r\n      this.pause_button.addEventListener('click', e => this.playPause(e));\r\n      this.bar.addEventListener('click', e => this.barClick(e));\r\n  \r\n      //setup global array of players \r\n      if(!window.podcast_players){\r\n        window.podcast_players = [];\r\n      }\r\n      window.podcast_players.push(this.player);\r\n    }\r\n  \r\n    playPause(e){\r\n      if (!!e) e.preventDefault();\r\n  \r\n      this.player.classList.toggle('playing');\r\n  \r\n      if (this.canBePlayed) {\r\n        if (this.isPlaying) {\r\n          this.pause();\r\n        } else {\r\n          this.play();\r\n        }\r\n      }\r\n      else if (this.preload === 'none') {\r\n        // If player can't be played, because audio wasn't pre-loaded\r\n        // due to the preload=\"none\" property set,\r\n        // load the audio file at this point and start playing it immediately\r\n        this.audio.load();\r\n        this.play();\r\n      }\r\n    }\r\n\r\n    stopAllPlayers(current){\r\n      for(let player of window.podcast_players){\r\n        if(player != current){\r\n          player.podcastplayer.pause();\r\n        }\r\n      }\r\n    }\r\n  \r\n    play() {\r\n      if(!this.player.classList.contains('played')){\r\n        this.player.classList.add('played');\r\n      }\r\n      this.stopAllPlayers(this.player);\r\n      this.player.classList.add('playing');\r\n      this.audio.play();\r\n    }\r\n    \r\n    pause() {\r\n      this.player.classList.remove('playing');\r\n      this.audio.pause();\r\n    }\r\n  \r\n  \r\n    // Restart audio\r\n    restart(e){\r\n      if (!!e) e.preventDefault();\r\n  \r\n      this.currentTime = 0;\r\n      if (!this.isPlaying) this.play();\r\n    }\r\n  \r\n  \r\n    // when audio file can be played in user's browser\r\n    onCanPlay() {\r\n      this.canBePlayed = true;\r\n      this.timeLeft = this.audio.duration;\r\n      var percentagePlayed = 0;\r\n  \r\n      // If player has a time offset specified\r\n      // style the progress bar and title accordingly\r\n      if (this.timeOffset > 0) {\r\n        var percentagePlayed = this.timeOffset / this.audio.duration;\r\n      }\r\n  \r\n      this.updateVisualProgress(percentagePlayed);\r\n    }\r\n  \r\n    // when player starts playing\r\n    onPlaying(){\r\n      this.ended = false;\r\n      this.isPlaying = true;\r\n      this.startProgressTimer();\r\n    }\r\n  \r\n  \r\n    // starts timer\r\n    startProgressTimer() {\r\n      this.timer = {};\r\n  \r\n      if (this.timer.sliderUpdateInterval) {\r\n        clearInterval(this.timer.sliderUpdateInterval);\r\n      }\r\n  \r\n      this.timer.sliderUpdateInterval = setInterval( () => {\r\n        if ( this.isPlaying ) {\r\n          this.currentTime = this.audio.currentTime;\r\n          this.timeLeft = this.audio.duration - this.currentTime;\r\n          var percentagePlayed = this.currentTime / this.audio.duration;\r\n          this.updateVisualProgress(percentagePlayed);\r\n        } \r\n        else {\r\n          clearInterval(this.timer.sliderUpdateInterval);\r\n        }\r\n      }, 60);\r\n    }\r\n  \r\n  \r\n    // when Player is paused\r\n    onPause() {\r\n      this.isPlaying = false;\r\n    }\r\n  \r\n  \r\n    // when Player ended playing an audio file\r\n    onEnd() {\r\n      this.ended = true;\r\n      this.isPlaying = false;\r\n    }\r\n  \r\n  \r\n    // on file load error\r\n    onError() {\r\n      this.player.classList.add('cantplay');\r\n      this.error = true;\r\n      this.player.setAttribute('aria-invalid', 'true');\r\n    }\r\n  \r\n  \r\n    // to convert seconds to 'm:ss' format\r\n    convertSecToMin(seconds){\r\n      if (seconds === 0) return '0:00';\r\n      var minutes = Math.floor(seconds / 60);\r\n      var secondsToCalc = Math.floor(seconds % 60) + '';\r\n      return minutes + ':' + (secondsToCalc.length < 2 ? '0' + secondsToCalc : secondsToCalc);\r\n    }\r\n  \r\n  \r\n    // When user clicks somewhere on the progress bar\r\n    barClick(e) {\r\n      e.preventDefault();\r\n  \r\n      if (this.canBePlayed) {\r\n        this.updateProgressBar(e);\r\n        if (!this.isPlaying) {\r\n          this.play();\r\n        }\r\n      }\r\n      else if (this.preload === 'none') {\r\n        this.audio.load();\r\n        this.audio.addEventListener('loadedmetadata', () => {\r\n          this.updateProgressBar(e);\r\n          if (!this.isPlaying) {\r\n            this.play();\r\n          }\r\n        }, false);\r\n      }\r\n    }\r\n  \r\n\r\n    // Helper function\r\n    // that recalculates the progress bar position\r\n    // based on the event.click position\r\n    updateProgressBar(e) {\r\n      var x = e.x - this.bar.getBoundingClientRect().left;\r\n      var r = (x / this.bar.getBoundingClientRect().width) * this.audio.duration;\r\n      this.updatePlayPosition(r);\r\n    }\r\n    \r\n    \r\n    // Helper function\r\n    // updates the current time based on a time variable\r\n    updatePlayPosition(newTime) {\r\n      this.currentTime = this.audio.currentTime = newTime;\r\n      var percentagePlayed = this.currentTime / this.audio.duration;\r\n      this.updateVisualProgress(percentagePlayed);\r\n    }\r\n    \r\n    \r\n    // Helper function\r\n    // updates the progress bar based on a percentage played\r\n    updateVisualProgress(percentagePlayed) {\r\n      this.progress.style.width = (percentagePlayed * 100) + '%';\r\n      this.time.innerHTML = this.convertSecToMin(this.timeLeft);\r\n    }\r\n  \r\n  };","import { PodcastPlayer } from './player'\r\n\r\nvar docReady = function(){\r\n  let players = document.querySelectorAll('.podcast-player');\r\n  for(var player of players){\r\n    var player = new PodcastPlayer(player);\r\n  }\r\n};\r\n\r\n\r\nif ( document.readyState === 'complete' || (document.readyState !== 'loading' && !document.documentElement.doScroll)) {\r\n  docReady();\r\n} \r\nelse {\r\n  document.addEventListener('DOMContentLoaded', docReady);\r\n}\r\n\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}